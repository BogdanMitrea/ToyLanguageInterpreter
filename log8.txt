Program state: 1
Output list:
 
Execution stack:
 Ref(int) v; New(v,20); print(readHeap(v)); writeHeap(v,30); print((readHeap(v) + 5)); print(v)
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) v
 New(v,20); print(readHeap(v)); writeHeap(v,30); print((readHeap(v) + 5)); print(v)
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) v
 New(v,20); print(readHeap(v)); writeHeap(v,30); print((readHeap(v) + 5)); print(v)
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20); print(readHeap(v)); writeHeap(v,30); print((readHeap(v) + 5)); print(v)
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20); print(readHeap(v)); writeHeap(v,30); print((readHeap(v) + 5)); print(v)
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20)
 print(readHeap(v)); writeHeap(v,30); print((readHeap(v) + 5)); print(v)
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20)
 print(readHeap(v)); writeHeap(v,30); print((readHeap(v) + 5)); print(v)
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(v)); writeHeap(v,30); print((readHeap(v) + 5)); print(v)
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(v)); writeHeap(v,30); print((readHeap(v) + 5)); print(v)
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(v))
 writeHeap(v,30); print((readHeap(v) + 5)); print(v)
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(v))
 writeHeap(v,30); print((readHeap(v) + 5)); print(v)
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 20
Execution stack:
 writeHeap(v,30); print((readHeap(v) + 5)); print(v)
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 20
Execution stack:
 writeHeap(v,30); print((readHeap(v) + 5)); print(v)
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 20
Execution stack:
 writeHeap(v,30)
 print((readHeap(v) + 5)); print(v)
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 20
Execution stack:
 writeHeap(v,30)
 print((readHeap(v) + 5)); print(v)
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 20
Execution stack:
 print((readHeap(v) + 5)); print(v)
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 20
Execution stack:
 print((readHeap(v) + 5)); print(v)
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 20
Execution stack:
 print((readHeap(v) + 5))
 print(v)
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 20
Execution stack:
 print((readHeap(v) + 5))
 print(v)
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 20
 35
Execution stack:
 print(v)
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 20
 35
Execution stack:
 print(v)
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 20
 35
 (1,int)
Execution stack:
 
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) v; New(v,20); print(readHeap(v)); writeHeap(v,30); print((readHeap(v) + 5)); print(v)
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) v
 New(v,20); print(readHeap(v)); writeHeap(v,30); print((readHeap(v) + 5)); print(v)
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) v
 New(v,20); print(readHeap(v)); writeHeap(v,30); print((readHeap(v) + 5)); print(v)
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20); print(readHeap(v)); writeHeap(v,30); print((readHeap(v) + 5)); print(v)
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20); print(readHeap(v)); writeHeap(v,30); print((readHeap(v) + 5)); print(v)
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20)
 print(readHeap(v)); writeHeap(v,30); print((readHeap(v) + 5)); print(v)
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20)
 print(readHeap(v)); writeHeap(v,30); print((readHeap(v) + 5)); print(v)
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(v)); writeHeap(v,30); print((readHeap(v) + 5)); print(v)
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(v)); writeHeap(v,30); print((readHeap(v) + 5)); print(v)
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(v))
 writeHeap(v,30); print((readHeap(v) + 5)); print(v)
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(v))
 writeHeap(v,30); print((readHeap(v) + 5)); print(v)
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 20
Execution stack:
 writeHeap(v,30); print((readHeap(v) + 5)); print(v)
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 20
Execution stack:
 writeHeap(v,30); print((readHeap(v) + 5)); print(v)
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 20
Execution stack:
 writeHeap(v,30)
 print((readHeap(v) + 5)); print(v)
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 20
Execution stack:
 writeHeap(v,30)
 print((readHeap(v) + 5)); print(v)
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 20
Execution stack:
 print((readHeap(v) + 5)); print(v)
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 20
Execution stack:
 print((readHeap(v) + 5)); print(v)
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 20
Execution stack:
 print((readHeap(v) + 5))
 print(v)
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 20
Execution stack:
 print((readHeap(v) + 5))
 print(v)
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 20
 35
Execution stack:
 print(v)
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 20
 35
Execution stack:
 print(v)
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 20
 35
 (1,int)
Execution stack:
 
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
