Program state: 1
Output list:
 
Execution stack:
 Ref(int) v;New(v,20);Ref(Ref(int)) a;New(a,v);New(v,30);print(readHeap(readHeap(a)))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) v
 New(v,20);Ref(Ref(int)) a;New(a,v);New(v,30);print(readHeap(readHeap(a)))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) v
 New(v,20);Ref(Ref(int)) a;New(a,v);New(v,30);print(readHeap(readHeap(a)))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20);Ref(Ref(int)) a;New(a,v);New(v,30);print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20);Ref(Ref(int)) a;New(a,v);New(v,30);print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20)
 Ref(Ref(int)) a;New(a,v);New(v,30);print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20)
 Ref(Ref(int)) a;New(a,v);New(v,30);print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a;New(a,v);New(v,30);print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a;New(a,v);New(v,30);print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a
 New(a,v);New(v,30);print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a
 New(a,v);New(v,30);print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v);New(v,30);print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v);New(v,30);print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v)
 New(v,30);print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v)
 New(v,30);print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30);print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30);print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30)
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30)
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 20
Execution stack:
 
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) v; New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) v
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) v
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20)
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20)
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v)
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v)
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30)
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30)
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 20
Execution stack:
 
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) v; New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) v
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) v
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20)
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20)
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v)
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v)
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30)
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30)
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 20
Execution stack:
 
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) v; New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) v
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) v
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20)
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20)
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v)
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v)
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30)
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30)
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 20
Execution stack:
 
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) v; New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) v
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) v
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20)
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20)
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v)
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v)
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30)
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30)
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 20
Execution stack:
 
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) v; New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) v
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) v
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20)
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20)
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v)
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v)
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30)
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30)
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 20
Execution stack:
 
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) v; New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) v
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) v
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20)
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20)
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v)
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v)
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30)
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30)
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 20
Execution stack:
 
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) v; New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) v
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) v
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20)
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20)
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v)
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v)
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30)
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30)
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 20
Execution stack:
 
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) v; New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) v
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) v
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20)
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20)
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v)
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v)
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30)
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30)
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 20
Execution stack:
 
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 20
Execution stack:
 
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 20
Execution stack:
 
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 20
Execution stack:
 
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 20
Execution stack:
 
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 20
Execution stack:
 
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 20
Execution stack:
 
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) v; New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) v
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) v
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20)
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20)
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v)
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v)
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30)
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30)
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 20
Execution stack:
 
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 20
Execution stack:
 
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 20
Execution stack:
 
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 20
Execution stack:
 
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 20
Execution stack:
 
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 20
Execution stack:
 
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 20
Execution stack:
 
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) v; New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) v
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) v
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20)
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20)
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v)
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,v)
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30)
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,30)
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 20
Execution stack:
 
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) v; New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) v
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) v
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20)
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v,20)
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 8
Output list:
 
Execution stack:
 Ref(int) v; New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 8
Output list:
 
Execution stack:
 Ref(int) v
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 8
Output list:
 
Execution stack:
 Ref(int) v
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 8
Output list:
 
Execution stack:
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 8
Output list:
 
Execution stack:
 New(v,20); Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 8
Output list:
 
Execution stack:
 New(v,20)
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 8
Output list:
 
Execution stack:
 New(v,20)
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 8
Output list:
 
Execution stack:
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 8
Output list:
 
Execution stack:
 Ref(Ref(int)) a; New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 8
Output list:
 
Execution stack:
 Ref(Ref(int)) a
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 8
Output list:
 
Execution stack:
 Ref(Ref(int)) a
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 8
Output list:
 
Execution stack:
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 8
Output list:
 
Execution stack:
 New(a,v); New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 8
Output list:
 
Execution stack:
 New(a,v)
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 8
Output list:
 
Execution stack:
 New(a,v)
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (0,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 8
Output list:
 
Execution stack:
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
Lock Table:
 
--------------------------------------------------
Program state: 8
Output list:
 
Execution stack:
 New(v,30); print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
Lock Table:
 
--------------------------------------------------
Program state: 8
Output list:
 
Execution stack:
 New(v,30)
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
Lock Table:
 
--------------------------------------------------
Program state: 8
Output list:
 
Execution stack:
 New(v,30)
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (1,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 
Lock Table:
 
--------------------------------------------------
Program state: 8
Output list:
 
Execution stack:
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
Lock Table:
 
--------------------------------------------------
Program state: 8
Output list:
 
Execution stack:
 print(readHeap(readHeap(a)))
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
Lock Table:
 
--------------------------------------------------
Program state: 8
Output list:
 20
Execution stack:
 
Symbol table:
 a: (2,Ref(int))
 v: (3,int)
 
File table:
 
Heap:
 1->20
 2->(1,int)
 3->30
 
Lock Table:
 
--------------------------------------------------
