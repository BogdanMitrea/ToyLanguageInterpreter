Program state: 1
Output list:
 
Execution stack:
 fork(fork(print(Hello world))); print(Hello)
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(print(Hello world)))
 print(Hello)
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(print(Hello world)))
 print(Hello)
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(Hello)
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 fork(print(Hello world))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(Hello)
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 fork(print(Hello world))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 Hello
Execution stack:
 
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 2
Output list:
 Hello
Execution stack:
 
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 Hello
Execution stack:
 print(Hello world)
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 Hello
Execution stack:
 
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 2
Output list:
 Hello
Execution stack:
 
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 Hello
Execution stack:
 print(Hello world)
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 Hello
 Hello world
Execution stack:
 
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 2
Output list:
 Hello
 Hello world
Execution stack:
 
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 Hello
 Hello world
Execution stack:
 
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(print(Hello world))); print(Hello)
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(print(Hello world)))
 print(Hello)
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(print(Hello world)))
 print(Hello)
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(Hello)
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 fork(print(Hello world))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(Hello)
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 fork(print(Hello world))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 Hello
Execution stack:
 
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 2
Output list:
 Hello
Execution stack:
 
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 Hello
Execution stack:
 print(Hello world)
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 Hello
Execution stack:
 
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 2
Output list:
 Hello
Execution stack:
 
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 Hello
Execution stack:
 print(Hello world)
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 Hello
 Hello world
Execution stack:
 
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 2
Output list:
 Hello
 Hello world
Execution stack:
 
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 Hello
 Hello world
Execution stack:
 
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(print(Hello world))); print(Hello)
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(print(Hello world)))
 print(Hello)
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(print(Hello world)))
 print(Hello)
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(Hello)
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 fork(print(Hello world))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(Hello)
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 fork(print(Hello world))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 Hello
Execution stack:
 
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 2
Output list:
 Hello
Execution stack:
 
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 3
Output list:
 Hello
Execution stack:
 print(Hello world)
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 Hello
Execution stack:
 
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 2
Output list:
 Hello
Execution stack:
 
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 3
Output list:
 Hello
Execution stack:
 print(Hello world)
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 Hello
 Hello world
Execution stack:
 
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 2
Output list:
 Hello
 Hello world
Execution stack:
 
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 3
Output list:
 Hello
 Hello world
Execution stack:
 
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 4
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 4
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 4
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 4
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 4
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 4
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 4
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 4
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 4
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 4
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 4
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 4
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 4
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 4
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 4
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 4
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 4
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 4
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 4
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 4
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 4
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 4
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 4
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 4
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 4
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 4
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 4
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 4
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 4
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 4
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 4
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 4
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 4
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 4
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 4
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 4
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 4
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 4
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->2
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 4
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 4
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 3
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 4
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->3
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->13
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->13
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->13
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->13
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->13
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->13
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->13
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->13
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->13
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->13
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->13
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->13
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->13
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->13
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->13
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->13
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->13
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->13
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->13
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->13
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->13
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->13
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->13
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->13
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->13
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->13
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->13
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->13
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->13
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->13
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->15
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->15
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->15
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 19
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 19
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 19
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 19
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->17
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->17
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->17
 
--------------------------------------------------
Program state: 19
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->17
 
--------------------------------------------------
Program state: 20
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->17
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->17
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->17
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->17
 
--------------------------------------------------
Program state: 19
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->17
 
--------------------------------------------------
Program state: 20
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->17
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->17
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->17
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->17
 
--------------------------------------------------
Program state: 19
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->17
 
--------------------------------------------------
Program state: 20
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->17
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->17
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->17
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->17
 
--------------------------------------------------
Program state: 19
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->17
 
--------------------------------------------------
Program state: 20
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->17
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->17
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->17
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->17
 
--------------------------------------------------
Program state: 19
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->17
 
--------------------------------------------------
Program state: 20
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->17
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->17
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->17
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->17
 
--------------------------------------------------
Program state: 19
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->17
 
--------------------------------------------------
Program state: 20
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->17
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->19
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->19
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->19
 
--------------------------------------------------
Program state: 19
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->19
 
--------------------------------------------------
Program state: 20
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->19
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->19
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->19
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->19
 
--------------------------------------------------
Program state: 19
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->19
 
--------------------------------------------------
Program state: 20
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->19
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->19
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->19
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->19
 
--------------------------------------------------
Program state: 19
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->19
 
--------------------------------------------------
Program state: 20
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->19
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->19
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->19
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->19
 
--------------------------------------------------
Program state: 19
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->19
 
--------------------------------------------------
Program state: 20
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->19
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->19
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->19
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->19
 
--------------------------------------------------
Program state: 19
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->19
 
--------------------------------------------------
Program state: 20
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->19
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->19
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->19
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->19
 
--------------------------------------------------
Program state: 19
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->19
 
--------------------------------------------------
Program state: 20
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->19
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 19
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 20
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 19
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 19
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 19
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 19
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 19
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 19
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->18
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->18
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->18
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->18
 
--------------------------------------------------
Program state: 19
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->18
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->18
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->18
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->18
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->18
 
--------------------------------------------------
Program state: 19
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->18
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->18
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->18
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->18
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->18
 
--------------------------------------------------
Program state: 19
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->18
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->18
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->18
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->18
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->18
 
--------------------------------------------------
Program state: 19
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->18
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->18
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->18
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->18
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->18
 
--------------------------------------------------
Program state: 19
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->18
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->18
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->18
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->18
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->18
 
--------------------------------------------------
Program state: 19
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->18
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 19
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 19
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 19
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 19
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 19
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 19
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 19
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->16
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 19
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 
File table:
 
Heap:
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 20
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 20
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 20
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 20
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 20
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 20
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 20
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 20
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 20
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 20
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 20
 30
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 20
 30
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 20
 30
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 20
 30
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 20
 30
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 20
 30
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 20
 30
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 20
 30
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 20
 30
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 20
 30
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 20
 30
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 20
 30
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 20
 30
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 20
 30
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 20
 30
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 20
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 20
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 20
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 20
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 20
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 20
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 20
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 20
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 20
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 20
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 20
 30
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 20
 30
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 20
 30
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 20
 30
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 20
 30
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 20
 30
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 20
 30
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 20
 30
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 20
 30
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 20
 30
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 20
 30
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 20
 30
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 20
 30
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 20
 30
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 20
 30
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 20
 30
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 20
 30
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 20
 30
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 20
 30
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 20
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 20
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 20
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 20
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 20
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 20
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 20
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 20
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 20
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 20
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 20
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 20
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 20
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 20
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 20
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 20
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 20
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 20
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)); fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x))
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)); Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x))
 Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1))); writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(writeHeap(v2,(readHeap(v2) + 1)))
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->31
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->12
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->21
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 20
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 20
Execution stack:
 print(readHeap(v2))
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 20
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 14
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 20
 32
Execution stack:
 
Symbol table:
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->32
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
 305
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
 305
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 19
 305
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 19
 305
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 19
 305
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 19
 305
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 19
 305
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 19
 305
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->35
 
Lock Table:
 1->12
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->35
 
Lock Table:
 1->12
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->35
 
Lock Table:
 1->12
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->35
 
Lock Table:
 1->12
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->35
 
Lock Table:
 1->12
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->35
 
Lock Table:
 1->12
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->35
 
Lock Table:
 1->12
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->35
 
Lock Table:
 1->12
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->35
 
Lock Table:
 1->12
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->35
 
Lock Table:
 1->12
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
 350
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
 350
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
 350
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
 350
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
 350
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
 350
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
 350
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
 350
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 19
 300
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 19
 300
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 19
 300
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 19
 300
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 19
 300
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 19
 300
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 19
 300
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 19
 300
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 19
 300
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 19
 300
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 19
 300
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
 300
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
 300
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
 300
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
 300
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 200
 305
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 200
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 200
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 200
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 200
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 200
 305
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 200
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 200
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 200
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 200
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 200
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 200
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 200
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 200
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 200
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->16
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->16
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->16
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->16
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->16
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->16
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->16
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->16
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->16
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->16
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->16
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->16
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->16
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->16
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->16
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->16
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->16
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->16
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->16
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->16
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->16
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->16
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->16
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->16
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->16
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->16
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->16
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->16
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->16
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->16
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 16
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 16
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 16
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 16
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
 305
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 16
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
 305
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 16
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 200
 305
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 200
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 200
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 200
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 200
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 200
 305
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 200
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 200
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 200
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 200
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 200
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 200
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 200
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 200
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 200
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 200
 35
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 200
 35
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 200
 35
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 200
 35
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 200
 35
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 200
 35
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 200
 35
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 200
 35
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 200
 35
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 200
 35
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 200
 35
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 200
 35
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 200
 35
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 200
 35
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 200
 35
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
 350
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
 350
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
 305
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
 305
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 19
 305
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 19
 305
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->35
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->35
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->35
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->35
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->35
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->35
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->35
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->35
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->35
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->35
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 19
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 19
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 19
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 200
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 200
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 200
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 200
 305
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 200
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 200
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 200
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 200
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 200
 305
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 200
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 200
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 200
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 200
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 200
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 200
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 200
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 200
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 200
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
 305
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
 305
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
 305
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
 305
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
 305
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
 305
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
 305
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
 305
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
 305
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
 305
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
 350
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
 350
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
 305
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
 305
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
 305
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
 305
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
 305
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
 305
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
 350
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
 350
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->15
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->15
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->15
 2->-1
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->15
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->15
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->15
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->15
 2->-1
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->15
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->15
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->15
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->15
 2->-1
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->15
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->15
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->15
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->15
 2->-1
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->15
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->15
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->15
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->15
 2->-1
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->15
 2->-1
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->15
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->15
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->15
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->15
 2->-1
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->15
 2->-1
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->15
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->16
 2->18
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->16
 2->18
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->16
 2->18
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->16
 2->18
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->16
 2->18
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->16
 2->18
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->16
 2->18
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->16
 2->18
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->16
 2->18
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->16
 2->18
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->16
 2->18
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->16
 2->18
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->16
 2->18
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->16
 2->18
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->16
 2->18
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->16
 2->18
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->16
 2->18
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->16
 2->18
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->16
 2->18
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->16
 2->18
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->16
 2->18
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->16
 2->18
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->16
 2->18
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->16
 2->18
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->16
 2->18
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->16
 2->18
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->16
 2->18
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->16
 2->18
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->16
 2->18
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->16
 2->18
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->17
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->17
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->17
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->17
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->17
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->17
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->17
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->17
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->17
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->17
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->17
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->17
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->17
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->17
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->17
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->17
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->17
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->17
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->17
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->17
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->17
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->17
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->17
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->17
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->17
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->17
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->17
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->17
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->17
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->17
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 17
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 18
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 17
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 18
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 17
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 18
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 17
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 18
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 17
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 18
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 17
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 18
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 17
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 18
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 17
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 18
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 17
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 18
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 16
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 17
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 18
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 16
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 17
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 18
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 16
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 17
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 18
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 16
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 17
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 18
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
 350
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 16
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 17
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 18
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
 350
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 16
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 17
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 18
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 16
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 17
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 18
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->13
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
 305
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
 305
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->12
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->200
 2->30
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->13
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->35
 
Lock Table:
 1->-1
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
 350
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
 350
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 199
 350
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->199
 2->350
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1; Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v1
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2; int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Ref(int) v2
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x; int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int x
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q; New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 int q
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20); New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v1,20)
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (0,int)
 v2: (0,int)
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30); newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 New(v2,30)
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (0,int)
 
File table:
 
Heap:
 1->20
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x); fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(x)
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 0
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)); newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x))
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q); fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)); lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 newLock(q)
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 fork(lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x))
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)); Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x); writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 fork(fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q))
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)); lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) - 1))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 fork(lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q))
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->20
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q); writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->13
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 lock(x)
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10)); unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(v1,(readHeap(v1) * 10))
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) * 10))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->19
 2->30
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip; lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 unlock(x)
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->12
 2->14
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 Skip
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 lock(q)
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x); print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 lock(x)
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 writeHeap(v2,(readHeap(v2) + 5))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->300
 
Lock Table:
 1->-1
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1)); unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->15
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 
Execution stack:
 print(readHeap(v1))
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 unlock(x); lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 unlock(x)
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->11
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 lock(q); print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 lock(q)
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 print(readHeap(v2)); unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
Execution stack:
 print(readHeap(v2))
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
 305
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
 305
Execution stack:
 unlock(q)
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 12
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 13
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 14
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 15
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->11
 
--------------------------------------------------
Program state: 11
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 12
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 13
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 0
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 14
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
Program state: 15
Output list:
 190
 305
Execution stack:
 
Symbol table:
 q: 2
 x: 1
 v1: (1,int)
 v2: (2,int)
 
File table:
 
Heap:
 1->190
 2->305
 
Lock Table:
 1->-1
 2->-1
 
--------------------------------------------------
