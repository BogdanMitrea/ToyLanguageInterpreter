Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 1
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 2
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
--------------------------------------------------
Program state: 10
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 10
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 10
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 10
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 10
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 10
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 10
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 10
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 10
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 10
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 10
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 10
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 10
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 10
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 10
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 10
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
Lock Table:
 
--------------------------------------------------
Program state: 10
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
Lock Table:
 
--------------------------------------------------
Program state: 10
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
Lock Table:
 
--------------------------------------------------
Program state: 10
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
Lock Table:
 
--------------------------------------------------
Program state: 10
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
Lock Table:
 
--------------------------------------------------
Program state: 13
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 int v; Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 int v
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 Ref(int) a; v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 Ref(int) a
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 v: 0
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 v=10; New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 v=10
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 0
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 New(a,22); fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 New(a,22)
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (0,int)
 v: 10
 
File table:
 
Heap:
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a))); bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 fork(writeHeap(a,30); v=32; print(v); print(readHeap(a)))
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 bool t; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(a,30); v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 bool t
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 writeHeap(a,30)
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->22
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 v=32; print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 
Execution stack:
 v=32
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 10
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 10
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 10
Execution stack:
 print(v); print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 10
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 10
 30
Execution stack:
 print(v)
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 10
 30
 32
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 10
 30
 32
Execution stack:
 print(readHeap(a))
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 9
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 t: true
 v: 10
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
Program state: 12
Output list:
 10
 30
 32
 30
Execution stack:
 
Symbol table:
 a: (1,int)
 v: 32
 
File table:
 
Heap:
 1->30
 
Lock Table:
 
--------------------------------------------------
